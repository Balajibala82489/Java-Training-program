/* If we want to find whethe there is a cycle in linked list */

public boolean hasCycle(ListNode head) {
Set<ListNode> set = new HashSet<>();
while(head!=null){
if(set.contains(head)){
return true;
}
set.add(head);
head=head.next;
}
return false;
}

/* Program to find Two sum + sorted

boolean pairSum(int A[], int N, int X)
{
int i = 0;
int j = N - 1;
while (i < j) {
if (A[i] + A[j] == X)
return true;
else if (A[i] + A[j] < X)
i++;
else
j--;
}
return false;
}
